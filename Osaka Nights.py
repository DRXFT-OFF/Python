from time import sleep                      # импортируем необходимые библиотеки
from random import randint


def game():
    fridge['лапша'], fridge['консервы'], fridge['крупа'], fridge['сосиски'] = 2, 1, 3, 2    # кидаем пару продуктов
    stats['Премия'], stats['Траты'] = 10000, 10000    # выставляем как оно должно было быть в обучении
    sleep(2)
    print('-' * 20)
    while True:  # начинаем основной цикл
        print(stats)  # пишем потребности
        doing = input('Вы дома. Что хотите делать? Спать/Пить/Есть/Пойти куда-то. 0 - выйти \n').title()  # что делаем
        if doing == '0':    # если ответ 0:
            quiting = input('Вы уверены, что хотите выйти из игры? Д/Н ').capitalize()  # спрашиваем правда ли выйти
            if quiting == 'Д':      # если ответ Д, то выходим
                break
            if quiting == 'Н':      # если ответ Н, то продолжаем быть дома
                continue
        if doing == 'Пить':  # скрипт если хотим пить
            do = input('Чтобы попить введите "Пить" ').title()  # чуть-чуть рп
            while do != 'Пить':  # исключение неправильного ввода
                do = input('Ваш чайник упал из рук. Вы пролили всю воду. Введите "Пить" ').title()
            stats['Жажда'] += 20  # добавляем +20 к жажде
            print('Жажда +20')  # пишем это в консоли
            if stats['Жажда'] > 100:  # предотвращение > 100% жажды
                print('Вы больше не можете пить')
                stats['Жажда'] = 100    # жажду обратно на 100
        elif doing == 'Есть':  # если надо поесть:
            while True:  # начинаем цикл еды
                print(f'В вашем холодильнике: {fridge}')  # продукты в холодильнике
                eat = input('Что хотите съесть? 0 - отмена ').lower()  # выбираем что едим
                if eat == '0':  # если ответ 0, то возвращаемся к дому
                    break
                if eat in fridge:  # если это есть в продуктах (исключение ошибки ввода):
                    eat_num = int(input('Сколько штук? 0 - выбрать другой продукт '))  # сколько штук будем есть
                    while eat_num < 0:  # исключение ошибки с отрицательным вводом
                        eat_num = int(input('Нельзя съесть отрицательное число. 0 - выбрать другой продукт '))
                        if eat_num == 0:  # если написали 0, то выбираем другой продукт для еды
                            break
                    if eat_num > fridge[eat]:  # исключение ошибки ввода числа больше чем продукта
                        print('У вас нет столько продуктов')
                        continue
                    if eat_num == 0:  # если 0 при выборе числа продукта, то выбираем другой продукт который есть
                        continue
                    if fridge[eat] == 0:  # если продукт закончился, то возвращаемся к выбору продукта для еды
                        print('У вас больше нет этого в холодильнике')
                        continue
                    fridge[eat] -= eat_num  # если всё ок, то убираем введённое кол-во еды из холодильника
                    for i in calories:  # разбираем список калорий
                        if eat in i:  # если название еды совпадает с выбранным в списке калорий:
                            stats['Голод'] += calories[i] * eat_num  # то добавляем кол-во калорий к голоду
                            print(f'Калории +{calories[i] * eat_num}')  # и выводим сколько добавили
                    if stats['Голод'] > 100:  # предотвращение переедания
                        print('Вы больше не можете есть')
                        stats['Голод'] = 100    # выставляем голод обратно на 100
                        break
                    print('Голод:', stats['Голод'])  # в конце пишем статистику голода
                else:  # исключение неправильного ввода названия продукта
                    print('У вас этого нет')
                    continue
        elif doing == 'Спать':  # если выбрали поспать
            print('1 минута = +1 к Бодрости')
            min = int(input('Сколько минут хотите поспать? 0 - отмена '))  # пишем сколько минут хотим спать
            if min == 0:  # если написали 0, то возвращаемся к дому
                print('Вы решили не спать')
                continue
            while min < 0:  # исключение ошибки ввода отрицательного кол-ва минут
                min = int(input('Нельзя спать отрицательное кол-во времени. 0 - отмена '))  # вводим заново
                if min == 0:  # если введено 0, то возвращаемся к дому
                    print('Вы решили не спать')
                    break
            sleepable = randint(1, 3)  # рандом сна
            while sleepable != 3:  # если не выпало 3, то мы не можем уснуть
                sleep(2)
                print('У вас не получилось уснуть. Вы пытаетесь ещё раз')
                sleepable = randint(1, 3)  # ещё раз рандом, чтобы закончить цикл
            print(f'Вы уснули на {min} минут')
            stats['Бодрость'] += min  # добавляем в статистике кол-во минут, которое указывали
            if stats['Бодрость'] > 100:  # если бодрость получилась больше 100:
                razn = stats['Бодрость'] - 100  # вычисляем разницу пересыпа
                sleep(min - razn if hard == 1 else (min - razn) * 60)  # вычитаем эту разницу из времени сна
                stats['Бодрость'] = 100  # восстанавливаем на 100
                print('Вы уже выспались и проснулись раньше')
            else:  # иначе, если бодрость не превысила, то спим на время, которое и ввели
                sleep(min if hard == 1 else min * 60)
                print('Вы хорошо поспали')
            skip_sleep = input('Нажмите Enter чтобы продолжить')      # "пауза" чтобы игра не шла дальше
        elif doing == 'Пойти':    # если выбрано пойти куда то:
            walk = input('Куда хотите пойти? Магазин/Работа/Свалка авто(в разработке) ').title()    # выбираем куда идти
            if walk == 'Магазин':   # если идём в магазин:
                for i in products:      # разбираем пакет с покупками
                    products[i] = 0     # и удаляем каждый продукт
                shop()      # идём в магазин
                for i in products:      # после магазина снова пересматриваем продукты в пакете
                    if products[i] == 0:    # если продукт не был куплен, то пропускаем его
                        continue
                    else:
                        fridge[i] = products[i]     # иначе, если был куплен то отправляем его в холодильник дома
            elif walk == 'Работа':
                close = input('Введите "Закрыть", чтобы закрыть квартиру \n').title()  # просим ввести "закрыть"
                if close == 'Закрыть':  # если ввод правильный, то двигаемся на работу
                    print('Вы закрыли квартиру и направились на работу \n'
                          'Время в пути: 5 мин')
                    sleep(2.5 if hard == 1 else 150)
                    print('Половина пути пройдена!')  # время сколько идём в зависимости от сложности
                    sleep(2.5 if hard == 1 else 150)
                    print('Вы пришли на место!')
                else:  # если ошиблись символом:
                    while close != 'Закрыть':  # создаём цикл пока не введётся правильное значение
                        close = input('Вам всё же стоит закрыть свою квартиру \n'
                                      'Введите "Закрыть" чтобы закрыть квартиру \n').title()
                    print('Вы закрыли квартиру и направились на работу \n'
                          'Время в пути: 5 мин')
                    sleep(2.5 if hard == 1 else 150)
                    print('Половина пути пройдена!')  # всё также идём после повторных попыток закрыть дверь
                    sleep(2.5 if hard == 1 else 150)
                    print('Вы пришли на место!')
                print('-' * 15)
                print('Итак, вы на работе. Вам надо предлагать людям салфетки. \n'  # предисловие
                      'За каждую салфетку вы будете получать 200¥')
                work_start = input('Нажмите Enter когда будете готовы')     # тех. пауза
                get = 0         # сумма которую мы получим за всю работу
                cloth = 100     # кол-во салфеток для макс. продажи за 1 раз
                while True:     # начинаем цикл работы
                    sleep(1)
                    work = input('Мимо идёт прохожий. Вежливо предложите салфетку. / "Возьмите пожалуйста салфетку"'    
                                 '0 - закончить работу\n').lower().split()  # запрос слов предложения купить
                    if '0' in work:     # если ввели 0:
                        print('-' * 15)
                        stats['¥'] += get   # плюсуем доход за сегодня к общему бюджету
                        print(f'Вы заработали: {get}¥')
                        print(f'На счету: {stats["¥"]}¥')   # выводим статистику по заработку
                        print('-' * 15)
                        break   # заканчиваем цикл, возвращаемся домой
                    good = 0    # кол-во вежливых слов
                    bad = 0     # кол-во плохих слов
                    if cloth == 0:  # если продали все салфетки:
                        print('Вы закончили раздавать все салфетки на сегодня. Хорошо потрудились!')
                        print('-' * 15)
                        stats['¥'] += get   # плюсуем заработок за сегодня к общему бюджету
                        print(f'Вы заработали: {get}¥')
                        print(f'На счету: {stats["¥"]}¥')       # выводим статистику заработка
                        print('-' * 15)
                        break       # заканчиваем цикл, возвращаемся домой
                    for word in work:
                        if word == 'пацан' or word == 'держи' or word == 'возьми' or word == 'слыш' or word == 'слышь' \
                                or word == 'иди' or word == 'сюда' or word == 'подойди' or word == 'здарова'\
                                or word == 'купи' and len(work) < 16:   # если есть плохие слова
                            bad += 1        # плюсуем их в сумму плохих слов
                        elif word == 'здравствуйте' or word == 'возьмите' or word == 'пожалуйста' or word == 'извините'\
                                or word == 'простите' or word == 'девушка' or word == 'мужчина' or word == 'подойдите' \
                                or word == 'прошу' or word == 'прощения' or word == 'купите' or word == 'хотите'\
                                or word == 'Возьмите пожалуйста салфетку' and len(work) >= 16:
                            good += 1       # ищем хорошие слова и плюсуем в сумму хороших слов
                    if good > 0 and good > bad:     # если хороших слов > 0 и > плохих:
                        print('Вежливость. +100% к согласию')   # +100% к успеху
                        if randint(1, 2) == 1:      # рандом для шанса покупки/отказа, если выпадет 1:
                            print('Вы продали салфетку! +200¥')
                            get += 200      # +200 к зп за сегодня
                            cloth -= 1      # и минус салфетка
                            print(f'Салфеток: {cloth}')     # пишем остаток салфеток
                        else:
                            print('К сожалению, человек не купил салфетку')     # если выпало не один:
                            continue        # начинаем цикл продажи заново
                    else:       # иначе, если плохих слов больше или хороших слов 0:
                        print('Недостаточно вежливо. -100% к согласию')     # -100% к согласию
                        if randint(1, 4) == 1:      # у рандома вдвое уменьшен шанс продать, если выпадает 1:
                            print('Вы продали салфетку! +200¥')
                            get += 200      # +200 йен к зп за сегодня
                            cloth -= 1      # - 1 салфетка
                            print(f'Салфеток: {cloth}')     # сообщаем о кол-ве салфеток
                        else:       # иначе, если не выпало 1:
                            print('К сожалению, человек не купил салфетку')
                            continue    # начинаем цикл продажи заново
                print('Вы закончили работу и отправились домой \n'  # по окончанию работы заново идём домой
                      'Время в пути: 5 мин')
                sleep(2.5 if hard == 1 else 150)
                print('Половина пути пройдена!')
                sleep(2.5 if hard == 1 else 150)
                print('Вы пришли на место!')
            else:       # устранение ошибки неверного выбора куда отправиться
                print('Пока что туда нельзя отправиться')
        else:       # устранение ошибки выбора неверного действия
            print('Недоступное действие')
        if randint(1, 2) == 1:  # рандом для более щадящего расхода потребностей
            needs()  # убавляем потребности


def shop():         # функция магазина
    close = input('Введите "Закрыть", чтобы закрыть квартиру \n').title()      # просим ввести "закрыть"
    if close == 'Закрыть':                    # если ввод правильный, то двигаемся к магазину
        print('Вы закрыли квартиру и направились к магазину \n'
              'Время в пути: 2 мин')
        sleep(1 if hard == 1 else 60)
        print('Половина пути пройдена!')                # время сколько идём в зависимости от сложности
        sleep(1 if hard == 1 else 60)
        print('Вы пришли на место!')
    else:           # если ошиблись символом:
        while close != 'Закрыть':                 # создаём цикл пока не введётся правильное значение
            close = input('Вам всё же стоит закрыть свою квартиру \n'
                        'Введите "Закрыть" чтобы закрыть квартиру \n').title()
        print('Вы закрыли квартиру и направились к магазину \n'
              'Время в пути: 2 мин')
        sleep(1 if hard == 1 else 60)
        print('Половина пути пройдена!')                        # всё также идём после повторных попыток закрыть дверь
        sleep(1 if hard == 1 else 60)
        print('Вы пришли на место!')
    bill = 0  # переменная для подсчёта
    while True:  # начинаем цикл покупок
        print('-' * 30)
        print(f'Продукты: \n{products}')
        print('-' * 15)
        print(f'У вас: \n{stats["¥"]}¥')
        print('-' * 15)
        print(f'Чек: {bill}¥')
        print('-' * 15)
        print(f'Цены: \n{prices}¥, Enter - пойти оплачивать')
        ans = input().lower()
        if ans == 'сосиски':  # добавление продуктов в корзину и добавление цены
            numb = int(input(f'Сколько штук купить? 0 - отмена \n'))
            if numb == 0:  # функция отмены покупки продукта при введённом 0
                continue
            bill = shopping(numb, bill, ans)  # вызываем функцию хитрожоп-отладки и покупки
        elif ans == 'чипсы':
            numb = int(input(f'Сколько пачек купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == 'удон':
            numb = int(input(f'Сколько наборов купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == 'консервы':
            numb = int(input(f'Сколько консервов купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == 'крупа':
            numb = int(input(f'Сколько килограммов купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == 'лапша':
            numb = int(input(f'Сколько пачек купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == 'бп':
            numb = int(input(f'Сколько упаковок купить? 0 - отмена \n'))
            if numb == 0:
                continue
            bill = shopping(numb, bill, ans)
        elif ans == '' and bill == 0:  # если ничего не купили, то сразу кончаем цикл покупки и игры
            print('Вы ничего не купили и ушли с пустыми руками')
            break
        elif ans == '':  # если что-то купили, то начинаем оплачивать
            if bill > stats['¥']:  # запускаем условие, если чек получился больше, чем есть в кармане
                while bill > stats['¥']:  # начинаем цикл уборки продуктов пока счёт больше чем у нас есть денег
                    print('Ваш счёт получился больше, чем у вас есть денег. Придётся что то убрать')
                    print(products)
                    ans = input('Что убрать из покупок? ')  # пишем название, что убрать
                    if ans in products:  # если название продукта есть в корзине(исключение ошибки в символе):
                        num = int(input('Сколько штук? 0 - убрать другой продукт \n'))
                        while num < 0:  # предотвращение уборки отрицательного кол-ва продуктов
                            num = int(input('Нельзя убрать отрицательное число '))
                        if num == 0:  # Пишем сколько убрать. Если ответ 0, то начинаем цикл уборки продуктов заново
                            continue
                        if num > products[ans]:  # если число продуктов которое надо убрать больше,
                            print('Вы столько не покупали')  # чем в корзине то начинаем цикл уборки продуктов заново
                            continue
                        products[ans] -= num  # если всё ок, то убираем, то кол-во продуктов, которое написали
                        for i2 in prices:  # перебираем список с ценами
                            if ans in i2:  # если название продукта есть в списке:
                                bill -= prices[i2] * num  # убираем цену этих продуктов из чека
                        if products[ans] == 0:  # если мы убрали все продукты этого названия
                            print('У вас больше нет этого в корзине')  # (во избежание застревания на одном продукте):
                            print(f'Чек: {bill}')
                            continue  # начинаем цикл уборки заново
                        break  # заново начинаем цикл покупки
                    else:  # если ошиблись символом, то пишем, что такого продукта для уборки из корзины нет
                        print('Вы этого не покупали')
                        continue  # и возобновляем цикл
            else:  # иначе когда денег на покупку хватает:
                cancel = input('Хотите что-то убрать? Д/Н \n').capitalize()  # спрашиваем надо ли что-то убрать
                if cancel == 'Д':  # если надо убрать:
                    while True:  # начинаем цикл уборки продуктов
                        ans = input('Что убрать из покупок? / 0 - отмена ')  # пишем название, что убрать
                        if ans == '0':  # если ввели 0, то возвращаемся к покупкам
                            break
                        if ans in products:  # если название продукта есть в корзине(исключение ошибки в символе):
                            num = int(input('Сколько штук? 0 - убрать другой продукт \n'))  # пишем сколько убрать
                            while num < 0:  # предотвращение уборки отрицательного кол-ва продуктов
                                num = int(input('Нельзя убрать отрицательное число. 0 - убрать другой продукт '))
                                if num == 0:  # выбор другого продукта, чтобы убрать при введении 0
                                    break
                            if num == 0:  # если ответ 0, то начинаем цикл уборки продуктов заново
                                continue
                            if num > products[ans]:  # если число продуктов которое надо убрать больше,
                                print(
                                    'Вы столько не покупали')  # чем в корзине то начинаем цикл уборки продуктов заново
                                continue
                            products[ans] -= num  # если всё ок, то убираем, то кол-во продуктов, которое написали
                            for i2 in prices:  # перебираем список с ценами
                                if ans in i2:  # если название продукта есть в списке:
                                    bill -= prices[i2] * num  # убираем цену этих продуктов из чека
                            if products[ans] == 0:  # если мы убрали все продукты этого названия
                                print(
                                    'У вас больше нет этого в корзине')  # (во избежание застревания на одном продукте):
                                break  # начинаем цикл покупки заново
                            break  # и заново начинаем цикл покупки
                        else:  # если ошиблись символом, то пишем, что такого продукта для уборки из корзины нет
                            print('Вы этого не покупали')
                            continue  # и начинаем цикл заново
                if cancel == 'Н':  # если не хотим ничего убирать
                    pay = input(f'Вас счёт получился {bill}¥; У вас в кармане {stats["¥"]}¥ \n'
                                'Будете покупать? Д/Н \n').capitalize()  # спрашиваем будет ли платить человек
                    if pay == 'Д':  # если хотим платить, то:
                        stats["¥"] -= bill  # забираем деньги за покупку
                        print('- Спасибо за покупку, до свидания!')
                        print(f'Вы оплатили свои покупки. У вас осталось {stats["¥"]}¥')
                        print(f'Ваши покупки: {products}')  # после успешной оплаты выводим список купленных продуктов
                        print('-' * 15)
                        print('Вы направились обратно домой \n'
                              'Время в пути: 2 мин')
                        sleep(1 if hard == 1 else 60)
                        print('Половина пути пройдена!')  # время сколько идём в зависимости от сложности
                        sleep(1 if hard == 1 else 60)
                        print('Вы пришли на место!')
                        break  # и заканчиваем цикл покупки
                    if pay == 'Н':  # если не хотим платить, то:
                        for i in products:  # перебираем корзину
                            products[i] = 0  # и очищаем её от продуктов
                        print('Вы отказались оплачивать свои покупки и ушли с пустыми руками')
                        print('-' * 15)
                        print('Вы направились обратно домой \n'
                              'Время в пути: 2 мин')
                        sleep(1 if hard == 1 else 60)
                        print('Половина пути пройдена!')    # время сколько идём в зависимости от сложности
                        sleep(1 if hard == 1 else 60)
                        print('Вы пришли на место!')
                        break  # по окончанию очистки заканчиваем цикл покупки
        else:  # исключаем ошибку при неверном вводе названия продукта в магазине
            print('Такого здесь пока не продаётся')


def shopping(numb_ex, all_bill, ans_1):       # функция хитрожоп-отладки и покупки продуктов
    while numb_ex < 0:
        numb_ex = int(input('Нельзя купить отрицательное кол-во. 0 - отмена '))
        if numb_ex == 0:
            break
    all_bill += numb_ex * prices[ans_1]      # и сама закупка продуктов
    products[ans_1] += numb_ex
    return all_bill


def needs():                # функция потребностей
    stats['Голод'] -= 2
    stats['Жажда'] -= 2
    stats['Бодрость'] -= 1


print('Приветствуем! Рады видеть вас в Osaka Nights Alpha 0.3! \n'
      'Пока что доступно малая часть функционала, но в будущем его будет больше!')
print('-' * 10)
sleep(2)
print('Список изменений: \n-Игра была немного оптимизирована \n-Добавлен дом, возможность утолять потребности'
      ' и ходить на работу \n-Цены на продукты изменены и молоко было заменено на удон '
      '\n-Были исправлены некоторые баги')
print('-' * 20)
sleep(5)
words = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c',
         'v', 'b', 'n', 'm', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', 'ф', 'ы', 'в', 'а', 'п', 'р',
         'о', 'л', 'д', 'ж', 'э', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'ё']     # список для проверки ника
name = input('Введите имя: ').lower()  # вводим имя и фамилию
surname = input('Введите фамилию: ').lower()
while True:   # цикл выбора ника
    count_name = 0      # переменная верных символов в имени
    count_surname = 0   # переменная верных символов в фамилии
    for i in name:  # проверяем каждую букву в имени
        if i in words:      # если буква есть в списке верных символов:
            count_name += 1     # увеличиваем переменную верных символов
    if count_name < len(name):      # если верных символов меньше чем длина имени:
        print('Необходимо ввести корректное имя')
        name = input('Введите имя: ').lower()       # вводим имя ещё раз и начинаем заново
        continue
    for i2 in surname:  # проверяем каждую букву в списке для фамилии
        if i2 in words:  # если буква есть в списке верных символов
            count_surname += 1  # увеличиваем переменную верных символов
    if count_surname < len(surname):        # если верных символов меньше чем длина фамилии:
        print('Необходимо ввести корректную фамилию')
        surname = input('Введите фамилию: ').lower()    # вводим фамилию ещё раз и начинаем заново
        continue
    if name == surname:
        print('Имя и фамилия не могут быть одинаковыми')
        name = input('Введите имя: ').lower()  # вводим имя фамилию ещё раз и начинаем заново
        surname = input('Введите фамилию: ').lower()
        continue
    else:       # иначе, если всё ок:
        name.title()    # делаем имя фамилию с большой буквы
        surname.title()
        break       # и заканчиваем цикл выбора ника
try:    # пытаемся ввести формат времени (исключение введения буквы)
    hard = int(input('Выберите время: (1)Игровое(1 мин == 1 час)/(2)Реальное '))
    while hard != 1 and hard != 2:      # пока переменная не 1 или 2:
        try:    # пытаемся ввести ещё раз
            hard = int(input('Выбрано неправильно. Введите 1 или 2 '))
        except ValueError:      # если ввели букву:
            hard = None     # делаем переменную ничем
            while type(hard) != int:    # пока она не будет равняться числу:
                try:    # пытаемся ввести переменную заново, как число
                    hard = int(input('Введено некорректное значение. Пожалуйста введите 1 или 2 '))
                except ValueError:      # если ввели букву, то повторяем цикл ввода числа
                    continue
except ValueError:      # если ввели число:
    hard = None     # делаем переменную ничем
    while type(hard) != int:    # пока число не будет равняться числом:
        try:        # пытаемся ввести его как число
            hard = int(input('Введено некорректное значение. Пожалуйста введите 1 или 2 '))
            if hard != 1 and hard != 2:     # и если число не 1 или 2, то начинаем цикл заново
                continue
        except ValueError:      # если ввели букву, то начинаем цикл заново
            continue
stats = {'Голод': 100, 'Бодрость': 100, 'Жажда': 100, '¥': 20000, 'Траты': 0}
prices = {'сосиски': 35, 'чипсы': 55, 'удон': 50, 'консервы': 150, 'крупа': 75, 'лапша': 80, 'бп': 30}
products = {'сосиски': 0, 'чипсы': 0, 'удон': 0, 'консервы': 0, 'крупа': 0, 'лапша': 0, 'бп': 0}
calories = {'сосиски': 5, 'чипсы': 10, 'удон': 15, 'консервы': 40, 'крупа': 20, 'лапша': 25, 'бп': 3}
fridge = {}
tutorial = input('Пропустить обучение? Д/Н ').capitalize()
if tutorial == 'Н':
    print('--------------- \nОБУЧЕНИЕ \n---------------')
    print(f'Вы только что приехали в Осаку. В вашем кармане лежит {stats["¥"]}¥ \n'
          'Для начала стоит найти хоть кое-то жильё и работу')
    print('Но сначала найдём работу.')
    sleep(5)
    print('Пока что у вас нет опыта и образования, поэтому придётся пойти на общественную работу.')
    print('Эта работа не требует особых навыков или знаний. Здесь вам предстоит раздавать салфетки на улице. \n'
          'Вы пришли в ближайшее кафе и попросили устроить вас на работу.')
    sleep(10)
    rand = randint(1, 3)                # рандом для шанса устройства на работу
    if rand == 3:               # если рандом выдаёт 3 сразу устраиваемся
        stats['Зарплата'] = 10000               # выставляем зп
        print(f'Поздравляю! Вас сразу приняли на работу с зарплатой {stats["Зарплата"]}¥')
    while rand != 3:                # если нет, то делаем цикл пока не устроимся
        print('Вам сразу же отказали. Вы идёте дальше по улице, заходя в другие кафе')
        sleep(5)
        rand = randint(1, 3)
        if rand == 3:           # если выпадет 3, то мы устраиваемся, всё также
            stats['Зарплата'] = 10000           # выставляем зп
            print(f'Поздравляю! Вас приняли на работу со средней сдельной зарплатой {stats["Зарплата"]}¥')
    skip = input('Нажмите Enter, чтобы продолжить')         # пауза сообразить и прочитать всё
    sleep(0.5)
    stats['Траты'] = 10000              # аренда квартиры
    print('Самое время найти жильё! '
          'Но с вашим бюджетом пока можно позволить только маленькую квартирку на окраине города \n'
          f'Вы арендовали небольшую квартиру за {stats["Траты"]}¥ в месяц. \n'
          'Оплата начнётся со следующего месяца!')
    sleep(10)
    print('Что ж, пора идти в ближайший 7/11 и купить продуктов и остального по-мелочи')
    shop()          # вызываем функцию магазин в обучении
    stats['¥'] = 20000      # после покупок возобновляем деньги
    sleep(3)
    print('-' * 20)
    print('Поздравляю, вы прошли обучение! Теперь вы вольны делать всё, что хотите в этом огромном мире Японии!')
    sleep(4)
    print('Купите свою японскую легенду, восстанавливайте её, тюнингуйте, как вам только хочется, настраивайте,')
    sleep(5)
    print('ставьте более хорошие детали, обучайтесь новым вещам, постройте свою карьеру, найдите вторую половинку,')
    sleep(5)
    print('купите большой дом или квартиру, утоляйте свои потребности,')
    sleep(5)
    print('участвуйте в гонках и других интересных мероприятиях!')
    sleep(3)
    print('Также с этого момента у вас активируются все потребности. Не забывайте за ними следить!')
    game()
if tutorial == 'Д':
    game()
print('Благодарим за то, что опробовали Osaka Nights Alpha 0.3')
sleep(1)
print('Это Альфа-версия игры, в будущем возможностей будет гораздо больше')
sleep(1)
print('Если у вас есть какие-то идеи, предложения или вы нашли баг - пишите сюда:')
sleep(1)
print('kurennovsergey@mail.ru')
sleep(1)
print('До встречи в следующих версиях!')
sleep(1)
exiting = input('Нажмите Enter чтобы выйти')
